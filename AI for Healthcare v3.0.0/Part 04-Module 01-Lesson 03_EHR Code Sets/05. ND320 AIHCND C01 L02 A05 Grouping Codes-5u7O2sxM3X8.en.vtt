WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.805
Before we let you dive into an exercise,

00:00:02.805 --> 00:00:05.850
I wanted to share some methods that might be helpful.

00:00:05.850 --> 00:00:10.905
There are different ways to do these operations but I wanted to share this information.

00:00:10.905 --> 00:00:12.930
Let's take a look at this notebook.

00:00:12.930 --> 00:00:16.605
I've created a synthetic data example here for working through this.

00:00:16.605 --> 00:00:20.010
First, we'll go over how to search for text in

00:00:20.010 --> 00:00:24.825
a code description of a given text pattern using about contains function.

00:00:24.825 --> 00:00:26.505
As you can see in the code,

00:00:26.505 --> 00:00:32.185
we use this function to filter out the records that contain the text angioplasty.

00:00:32.185 --> 00:00:39.890
For our example, four out of five records have angioplasty in the text description.

00:00:39.890 --> 00:00:42.860
Also, we can reverse the filter and see

00:00:42.860 --> 00:00:45.980
records that don't have it by just adding the Tilda

00:00:45.980 --> 00:00:48.770
to the inner filter data frame condition and

00:00:48.770 --> 00:00:52.045
see the one record that doesn't have this text.

00:00:52.045 --> 00:00:55.925
Next, we move on to a second key skill that will cover,

00:00:55.925 --> 00:01:00.265
which is grouping codes that start with a certain character string pattern.

00:01:00.265 --> 00:01:03.240
So let's take the first character four.

00:01:03.240 --> 00:01:06.215
This can only include one code in this example

00:01:06.215 --> 00:01:09.140
but when we go through more code sets later,

00:01:09.140 --> 00:01:14.055
this first code could be a whole section of codes in group of large number of codes.

00:01:14.055 --> 00:01:16.820
Understand the hierarchy can be really important to

00:01:16.820 --> 00:01:19.775
see how things are grouped and at each character,

00:01:19.775 --> 00:01:22.765
as we mentioned earlier, this can make a big difference.

00:01:22.765 --> 00:01:27.805
Next, let's try two characters and use D2 for grouping codes.

00:01:27.805 --> 00:01:30.885
In this case, we now have two codes.

00:01:30.885 --> 00:01:33.560
Now that you have a little practice with filter and codes

00:01:33.560 --> 00:01:36.275
by description and grouping by characters,

00:01:36.275 --> 00:01:39.865
you're ready to play with some real codes from a real data set.

00:01:39.865 --> 00:01:43.010
This will help you understand the complexity and challenges of

00:01:43.010 --> 00:01:46.310
using code sets in aggregating this information.

00:01:46.310 --> 00:01:48.920
Also, this will give you the foundation for using

00:01:48.920 --> 00:01:53.370
more advanced methods as you grow your knowledge in this field.

